{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/button\";\nfunction RegistrationComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 13);\n    i0.ɵɵtext(1, \" Name required. \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"errorStateMatcher\", ctx_r0.matcher);\n  }\n}\nfunction RegistrationComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 13);\n    i0.ɵɵtext(1, \" Last Name required. \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"errorStateMatcher\", ctx_r1.matcher);\n  }\n}\nfunction RegistrationComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 13);\n    i0.ɵɵtext(1, \" E-Mail required. \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"errorStateMatcher\", ctx_r2.matcher);\n  }\n}\nfunction RegistrationComponent_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 13);\n    i0.ɵɵtext(1, \" Password required. \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"errorStateMatcher\", ctx_r3.matcher);\n  }\n}\nfunction RegistrationComponent_mat_error_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 13);\n    i0.ɵɵtext(1, \" Password too short. \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"errorStateMatcher\", ctx_r4.matcher);\n  }\n}\nfunction RegistrationComponent_mat_error_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password donesn't match! \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let RegistrationComponent = /*#__PURE__*/(() => {\n  class RegistrationComponent {\n    constructor(fb) {\n      this.fb = fb;\n    }\n    ngOnInit() {\n      this.form = this.fb.group({\n        name: [null, Validators.required],\n        lastName: [null, Validators.required],\n        email: ['', [Validators.email, Validators.required]],\n        password: [null, [Validators.minLength(6), Validators.required]],\n        confirmPassword: [null, Validators.required]\n      }, {\n        validators: [this.controlValuesAreEqual('password', 'confirmPassword')]\n      });\n    }\n    register() {\n      console.log(this.form.value);\n      console.log(`form valid: ${this.form.valid}`);\n    }\n    controlValuesAreEqual(controlNameA, controlNameB) {\n      return control => {\n        var _a, _b;\n        const FormGroup = control;\n        const valueOfControlA = (_a = FormGroup.get(controlNameA)) === null || _a === void 0 ? void 0 : _a.value;\n        const valueOfControlB = (_b = FormGroup.get(controlNameB)) === null || _b === void 0 ? void 0 : _b.value;\n        const str = `{\\\"${controlNameA}Confirmed\\\":\"true\"}`;\n        const errorObj = JSON.parse(str);\n        if (valueOfControlA !== valueOfControlB) {\n          FormGroup.controls[controlNameB].setErrors(errorObj);\n          return errorObj;\n        } else {\n          return null;\n        }\n      };\n    }\n    test() {\n      console.log(this.form.controls.confirmPassword.errors);\n      console.log(this.form);\n    }\n  }\n  RegistrationComponent.ɵfac = function RegistrationComponent_Factory(t) {\n    return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  RegistrationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistrationComponent,\n    selectors: [[\"app-registration\"]],\n    decls: 38,\n    vars: 7,\n    consts: [[1, \"registration\"], [1, \"form\", 3, \"formGroup\"], [1, \"full-width\"], [\"matInput\", \"\", \"placeholder\", \"Enter Name\", \"value\", \"\", \"formControlName\", \"name\"], [3, \"errorStateMatcher\", 4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"Enter Last Name\", \"value\", \"\", \"formControlName\", \"lastName\"], [\"matInput\", \"\", \"placeholder\", \"Enter E-Mail\", \"value\", \"\", \"formControlName\", \"email\"], [\"matInput\", \"\", \"placeholder\", \"Enter Password\", \"value\", \"\", \"type\", \"password\", \"formControlName\", \"password\"], [\"matInput\", \"\", \"placeholder\", \"Enter Password Again\", \"value\", \"\", \"type\", \"password\", \"formControlName\", \"confirmPassword\"], [4, \"ngIf\"], [\"routerLink\", \"../login\", 1, \"form__link\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [3, \"click\"], [3, \"errorStateMatcher\"]],\n    template: function RegistrationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Registration\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1)(4, \"mat-form-field\", 2)(5, \"mat-label\");\n        i0.ɵɵtext(6, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 3);\n        i0.ɵɵtemplate(8, RegistrationComponent_mat_error_8_Template, 2, 1, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 2)(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 5);\n        i0.ɵɵtemplate(13, RegistrationComponent_mat_error_13_Template, 2, 1, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-form-field\", 2)(15, \"mat-label\");\n        i0.ɵɵtext(16, \"E-Mail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 6);\n        i0.ɵɵtemplate(18, RegistrationComponent_mat_error_18_Template, 2, 1, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-form-field\", 2)(20, \"mat-label\");\n        i0.ɵɵtext(21, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 7);\n        i0.ɵɵtemplate(23, RegistrationComponent_mat_error_23_Template, 2, 1, \"mat-error\", 4);\n        i0.ɵɵtemplate(24, RegistrationComponent_mat_error_24_Template, 2, 1, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-form-field\", 2)(26, \"mat-label\");\n        i0.ɵɵtext(27, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 8);\n        i0.ɵɵtemplate(29, RegistrationComponent_mat_error_29_Template, 2, 0, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"p\");\n        i0.ɵɵtext(31, \"Already have an account? \");\n        i0.ɵɵelementStart(32, \"a\", 10);\n        i0.ɵɵtext(33, \"Login\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(34, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function RegistrationComponent_Template_button_click_34_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵtext(35, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function RegistrationComponent_Template_button_click_36_listener() {\n          return ctx.test();\n        });\n        i0.ɵɵtext(37, \"dasashasddas\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.name.hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.lastName.hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.email.hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.password.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.password.hasError(\"minLength\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.confirmPassword.hasError(\"passwordConfirmed\"));\n      }\n    },\n    dependencies: [i2.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.MatInput, i5.MatFormField, i5.MatLabel, i5.MatError, i6.MatButton],\n    styles: [\".registration[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:center;align-content:center;flex-direction:column;align-items:center;margin-top:40px}.form[_ngcontent-%COMP%]{min-width:150px;max-width:500px;width:100%;padding:40px}.form__link[_ngcontent-%COMP%]{color:#195eb9;text-decoration:none;cursor:pointer;font-size:large}.full-width[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return RegistrationComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}